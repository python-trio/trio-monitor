[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

# TODO: make sure files in MANIFEST.in are included
[project]
version = "0.0.0"
name = "trio-monitor"
description = "A monitor utility for Trio"
readme = "README.rst"
license = "MIT OR Apache-2.0"
dependencies = ["trio>=0.19.0"]
requires-python = ">=3.9"
authors = [
	{ name = "Lura Skye", email = "fuyukaii@proton.me" }
]
maintainers = [
    { name = "A5rocks", email = "git@helvetica.moe" }
]

# TODO: fill these out
keywords = []
classifiers=[
    "License :: OSI Approved :: MIT License",
    "License :: OSI Approved :: Apache Software License",
    "Framework :: Trio",
    "Operating System :: POSIX :: Linux",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: Microsoft :: Windows",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    # COOKIECUTTER-TRIO-TODO: Consider adding trove classifiers for:
    #
    # - Development Status
    # - Intended Audience
    # - Topic
    #
    # For the full list of options, see:
    #   https://pypi.python.org/pypi?%3Aaction=list_classifiers
]

[project.urls]
"Source code" = "https://github.com/python-trio/trio-monitor"

[tool.towncrier]
package = "trio_monitor"
filename = "docs/source/history.rst"
directory = "newsfragments"
underlines = ["-", "~", "^"]
issue_format = "`#{issue} <https://github.com/python-trio/trio-monitor/issues/{issue}>`__"

[tool.pytest.ini_options]
faulthandler_timeout = 60
xfail_strict = true
trio_mode = true

[tool.coverage.run]
branch = true
parallel = true
source = ["trio_monitor"]

[tool.coverage.paths]
source = ["src", "**/.nox/test*/**/site-packages"]

[tool.coverage.report]
precision = 1
exclude_lines = ["pragma: no cover", "abc.abstractmethod"]

[tool.uv]
# make sure that nox reinstalls trio-monitor
reinstall-package = ["trio-monitor"]
